%==========================================================================
%This function writes a function, testDataSets, for testing the viewer on
%all jsons stored locally in the Data/jsons directory.
%
%Authors: Thomas Maullin, Camille Maumet
%==========================================================================

function createTest()

    %Create new test file for editing.
    FID = fopen(fullfile(fileparts(mfilename('fullpath')), 'testDataSets.m'),'wt');

    %Add the start of the test code.
    start = sprintf('%s' , '%%==========================================================================',...
        '\n%%Unit tests for testing whether datasets run in the viewer. To run the',... 
        '\n%%below run the runTest function. The html files generated can be found in',...
        '\n%%the corresponding folders after the test has been run. Note: This',...
        '\n%%currently assumes the NIDM-Results were from the Neurovault NIDM examples',...
        '\n%%1.3.0 collection.',...
        '\n%%',...
        '\n%%Authors: Thomas Maullin, Camille Maumet. (Generated by the createTest',...
        '\n%%function).',...
        '\n%%==========================================================================',...
        '\n classdef testDataSets < matlab.unittest.TestCase',...  
        '\n \n \t methods',...
        '\n \t \t %%Function for deleting any HTML generated previously by the viewer',...
        '\n \t \t function delete_html_file(testCase, data_path)',...
        '\n \t \t \t index = fullfile(data_path,', sprintf('''index.html'''), ');',...
        '\n \t \t \t if exist(index, ', sprintf('''file'''), ')',...
        '\n \t \t \t \t delete(index);',...
        '\n \t \t \t end',...
        '\n \t \t end',...
        '\n \t end',...  
        '\n \n \t methods(Test)');  %#ok<*NOPRT>
    
    fprintf(FID, start);
    
    %Make a list of all json names stored locally.
%    filelist = cellstr(ls(fullfile(fileparts(mfilename('fullpath')), '..', 'Data', 'jsons')));
%    jsonFileList = filelist([contains(filelist, 'json')]);
%    jsonFileNameList = strrep(jsonFileList, '.json', '');
    a=dir([fullfile(fileparts(mfilename('fullpath')), '..', 'Data', 'jsons','*.json')]);
    jsonFileList={a.name};
    jsonFileNameList = strrep(jsonFileList, '.json', '');

    %For each json, create a test.
    for(i = 1:length(jsonFileList))
        tests = sprintf('%s' , '\n \n \t \t %%Test viewer displays ',jsonFileNameList{i},... 
            '\n \t \t function test_', jsonFileNameList{i},'(testCase)',...
            '\n \t \t \t data_path = fullfile(fileparts(mfilename(', sprintf('''fullpath'''), ')),', sprintf('''..'','), sprintf('''Data'','), '''', jsonFileNameList{i}, '''', ');',...
            '\n \t \t \t', sprintf(' if(~exist(data_path, ''dir''))'),...
            '\n \t \t \t \t mkdir(data_path);',...
            '\n \t \t \t \t websave(fullfile(data_path, ''tmp.zip''), ''http://neurovault.org/collections/1692/', jsonFileNameList{i},'.nidm.zip'');',...
            '\n \t \t \t \t unzip(fullfile(data_path, ''tmp.zip''), fullfile(data_path, ''.''));',...
            '\n \t \t \t end',...
            '\n \t \t \t testCase.delete_html_file(data_path);',...
            '\n \t \t \t nidm_results_display(fullfile(fileparts(mfilename(''fullpath'')), ''..'', ''Data'', ''jsons'',','''', jsonFileList{i},'''', '));',...
            '\n \t \t end');
        fprintf(FID, tests);
    end
    
    %end the test file.
    last = sprintf('%s', '\n \n \t end', '\n \n end');
    fprintf(FID, last);
    
    fclose(FID);

end
